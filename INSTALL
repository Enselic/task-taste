To install
----------

 * Edit 'includes/TaskTasteConfig/config.php'

 * Download and unzip
   https://bitbucket.org/cleonello/jqplot/downloads/jquery.jqplot.1.0.0a_r701.zip

 * Edit 'Makefile'

 * Run 'make install' with appropriate privileges

 * Use the folloing mod_rewrite rule:

     RewriteEngine On
     RewriteRule ^/projects/([^/]+)/([^/]+)$ /manage-project.php?username=$1&projectname=$2

 * Connect to the MySQL database with the 'mysql' utility:

       mysql --user=root --password

   run the following commands to create the site database:

       CREATE DATABASE tasktaste
           DEFAULT CHARACTER SET utf8
           DEFAULT COLLATE utf8_general_ci;

       CREATE TABLE tasktaste.Users (
           user_id int NOT NULL AUTO_INCREMENT,
           user_name varchar(64) NOT NULL,
           user_email varchar(64) DEFAULT NULL,
           user_salt varchar(24) NOT NULL,
           user_passwordhash varchar(128) NOT NULL,
           user_created timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
           PRIMARY KEY (user_id),
           UNIQUE (user_name),
           UNIQUE (user_email)
       ) COMMENT='Table with users. Passwords are stored salted and hashed with whirlpool.';

       CREATE TABLE tasktaste.LoginTokens (
           logintoken_userid int NOT NULL,
           logintoken_token varchar(128) NOT NULL,
           logintoken_created timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
           INDEX (logintoken_userid)
       ) COMMENT='Table with valid cookie-based login-tokens for users.';

       CREATE TABLE tasktaste.Projects (
           project_id int NOT NULL AUTO_INCREMENT,
           project_owneruserid int NOT NULL,
           project_urlname varchar(64) NOT NULL,
           project_name varchar(64) NOT NULL,
           project_description varchar(1024) NOT NULL DEFAULT 'Project description.',
           project_workedperweek float NULL,
           project_created timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
           PRIMARY KEY (project_id),
           INDEX (project_urlname),
           UNIQUE (project_owneruserid, project_urlname)
       ) COMMENT='Info for projects.';

       CREATE TABLE tasktaste.Tasks (
           task_id int NOT NULL AUTO_INCREMENT,
           task_projectid int NOT NULL,
           task_sizeid int NOT NULL,
           task_nameid int NOT NULL,
           task_deleted TINYINT NOT NULL DEFAULT '0',
           task_created timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
           PRIMARY KEY (task_id),
           INDEX (task_projectid)
       ) COMMENT='Info for tasks.';

       CREATE TABLE tasktaste.Sizes (
           size_id int NOT NULL AUTO_INCREMENT,
           size_previd int DEFAULT NULL,
           size_size float NOT NULL,
           size_created timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
           PRIMARY KEY (size_id)
       ) COMMENT='Has info for task sizes. Each size stores the previous size for task it belonged to. This linked list makes task size updates non-destructive.';

       CREATE TABLE tasktaste.Names (
           name_id int NOT NULL AUTO_INCREMENT,
           name_previd int DEFAULT NULL,
           name_name varchar(300) NOT NULL,
           name_created timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
           PRIMARY KEY (name_id)
       ) COMMENT='Task names. Each name stores the previous name to create a linked list of names for a given task. This linked list makes task name updates non-destructive.';

       CREATE TABLE tasktaste.Remaining (
           remaining_id int NOT NULL AUTO_INCREMENT,
           remaining_projectid int(11) NOT NULL,
           remaining_date date NOT NULL,
           remaining_size float NOT NULL,
           PRIMARY KEY (remaining_id),
           INDEX (remaining_projectid),
           INDEX (remaining_date)
       ) COMMENT='Tracks how much work is left for a given project a given date. Dates are in UTC';

   Create a user the website will use the databases as:

       CREATE USER 'tasktaste'@'localhost'
           IDENTIFIED BY 'password';
       GRANT SELECT, INSERT, UPDATE ON tasktaste.*
           TO 'tasktaste'@'localhost';
       GRANT DELETE ON tasktaste.LoginTokens
           TO 'tasktaste'@'localhost';

To install for tests
--------------------

   To setup the automated test environment you need to setup a
   database in which the tasktaste user has privileges to delete
   stuff. This is needed so that the database can be purged in order
   to have a repeatable environent for the tests:

       GRANT DELETE ON tasktaste.*
           TO 'tasktaste'@'localhost';

   Then you need to install libraries required by the Selenium RC
   web-browser testing suite. First, download and untar

     https://pypi.python.org/packages/source/s/selenium/selenium-2.41.0.tar.gz

   then cd into the unpacked dir and run

     sudo python setup.py install

   Now the Python library for selenium is installed. Finally, we just need to download
   and start the server, since we have legacy RC-based scripts. So download

     http://selenium-release.storage.googleapis.com/2.41/selenium-server-standalone-2.41.0.jar

   and then start the server:

     java -jar selenium-server-standalone-2.41.0.jar

   After this is done, you run the tests simply by running

     make tests

   from the git root. The tests include both unit tests as well as
   "real" tests that use a real browser. You might need to adjust the
   path to the firefox binary in tests/SeleniumTests.py
